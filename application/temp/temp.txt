各位同學大家好
我們就開始今天飛同步的課程
首先是來看修律課的部分
左邊是色不端右邊是卡蘭端
在左邊色不端的部分要先照socket
第二個參數
socket的degren
就是指名說這是一個UDP的一個socket
在往下右邊的卡蘭端也是一樣
要照一個UDP的一個socket
然後可能短的根據已經照好的socket
就可以直接跟似伏器來傳送資料了
左邊的server說到右邊的可能短
傳過來資料以後
他就進行一些處理
然後再把處理完以後的訊息
再回傳給右邊的客戶端
右邊的客戶端收到以後
做一些呈現之類的
然後這個socket就可以關掉了
這個是一個相當簡易的流程
往下就快速看過UDP拍賞的inplementation
首先先看到客戶端的部分
在客戶端的部分前面的技行
是對於設備端要點線過去的設備端
它的位置進行一些指定
然後在往下照socket
透過socket這個方式來完成
指定是一個UDP的一個socket
往下從User從keyboard輸入一些文字的訊息
那socket透過santoo這個方式
把訊息傳給server端
server端位置在哪裡
跟它的pornabal就是在這兩個
兩位上去指定的
往下另外一邊的server端收到以後
它會再回傳訊息
所以客戶端的這一邊
往下一行就是透過sift from這個方式
來等待接收
這個server端會傳過來的packet
這邊2048就指定
這個packet的訊息的內容
不要超過2048的bikes
其中從螢幕上印出
剛才server端傳過來的文字訊息
再來就完成這個client端的城市了
把這個socket給close掉
在server端那一邊
它的mutation就是要照一個socket
也是udp透過socketdagram
這個sembodic constant
那化server端需要使用一個特定的一個pornabal
所以它使用bind的這個方式
還去bind的想要的這個1200里
這個pornabal
那化接著就開始等著接收
另外一邊會傳過來的packet
所以接下來這個lop就是一直處理
接下來的一些事情
首先客戶端傳過來之調
這邊透過sift from這個方式來接收
然後改成大寫
再使用send to會傳給客戶端
那這個會傳要回傳到哪裡
這邊可以知道說
clientadress就是剛才這Bmrecefrough
從收到的socket
就會知道說客戶端的位置
跟它的pornabal是在哪裡
OK
那到這邊udpserver的部分就完成了
它算是一個相當簡易的一個progaming
接著就往下來看看說
透過tcp來進行socket programming的一個例子
相較於udp使用tcp
它的連線需要先行建立
所以對應到的socket programming
然後程式有一些些不一樣的地方
OK我們也是先來看這個suitable部分
左邊是server端右邊是clientad
那server端要照一個socket
然後等待這個連線的一個建立的要求
另外一邊clientadress也是需要有一個socket
再來它需要首先跟server端的socket
來進行連線建立的一個請求
那這個連線建立完成以後
客戶端就可以透過這個socket
跟另外一邊的server的socket
來進行這個訊息package的傳送或接收
OK
所以客戶端會先送我們這訊息
給左邊的server端
左邊的server端收到以後把文字改成大寫
再把處理以後的訊息
再傳給右邊的clientad
右邊的clientad收到以後
那螢幕上呈現出來接著socket關掉
然後完成客戶端的一個程式
那對於左邊的server端來講
一個任務結束以後它會再回去
繼續等待新的一個連線進來
OK
那所以一個server單的程式
它執行了以後就可以放在那邊
那客戶端可以一個一個的連線過去
它來處理
接著我們就來看看
實務上pile上的implementation
那大致上的內容跟UDP是很像的
有一些差異的地方
比方說在socket建立的時候
這邊要用socket stream
這個sambarial constant
來讓這個socket成為tcp的一個socket
OK
那客戶端由於需要有一個tcp的
一個連線的一個建立
那這個點口內這個方式
就是對於要連線的server
是在哪裡啊?
後南部然後來發出連線建立的一個緊繘
那等到另外一邊的server端
說到這個連線的緊繘
兩邊連線確定建立完以後
那兩邊就可以根據所建立好連線的socket
來進行pile key的傳送或接收了
OK
那在客戶端的部分
這個程式呢
它會先傳送支援過去
透過send這個方式
那這個方式是tcp的版本
你可以注意到說
跟前面的UDP
這個send2不太一樣
那這個秘密上的差異
就反映出
UDP不需要連線的建立
所以實際上socket
可以用來傳給不同的socket資料
也可以從不同的socket接收資料
那所以在名稱上就有一個send2
那來當你瞭解說
這個是要送給某一個socket的
那tcp呢
這個連線建立完以後
這個對象就已經確定了
而且不會改變了嘛
所以這個傳送資料
就在名稱上就不接一個圖
讓你知道說
這個已經不需要在另外指定了
因為可以傳送的對象
就只有這個剛才建立連線的
那一個對方而已
那往下一行呢
這個客戶端了
會從似乎接收到改成大型
或者文字訊息
它透過icv來接收
那在這邊
這個icv呢
是tcp的版本
給uDP的resift ROM
名稱上不太一樣
那這個原因跟剛才的send
以及send2是一樣的一個邏輯
OK
那收到轉成大型的文字以後
那客戶端把它從螢幕上連出來
就完成任務
把這個socket就關掉了
我們接著就來看
server部分的pifound的implementation
OK
那跟uDP一樣的部分呢
我們就帶快一點
那主要是要看差異的部分
那首先這個tcp的socket
這個socket stream
這個sendbody constant
就用來指名說
這需要是一個tcp的一個socket
OK
那下面的bind是一樣的
那在往下呢
這個resift
就代表是說
這個tcp的socket
正在等待接收
這個連線的一個要求
它正在這個dison的一個階段
那往下就進到這個花入
那這個花入跑這裡頭
如果說遠端有個socket連線要建立了
那這個sap呢
就會去接收這個連線要求
然後建立一個新的連線
然後建立連線以後
Tanwar return這個新的socket
OK
那往下基本上
就會用這個新的一個socket
來跟這個已經建立好的連線
來進行資料的傳送物接收了
OK
那再來呢
往下呢
這一行是透過這個socket
來resift data
就是從客戶段來接收資料的意思
那這邊呢
也跟clinadon一樣
這個是rcv
有區域與udp的bindable receive from
OK
往下呢
改成大寫
那話
透過剛才那一個新的socket
那使用sand這個方式
把改完大寫以後的資料傳給clinadon
那這個傳完以後
這個其實這個socket的任務就結束了
這個socket就clinadon
然後那個rp可以進行下一個這個處理的
OK
那這個就是server端的部分
到這邊呢我們就完成第二個張節的一個介紹了
那第二個張節呢
基本上就是tantle application layer
那我們已經討論到說這個clinadon
server的architecture
p2p2的architecture
那了解到說對application來講
那你可能會對於資料傳輸的reliability
然後資料傳輸需要有的貧款
然後這個傳輸點對點之間的延遲
會有一些的期望
那這個期望就會跟你的應用程式的不同
可能會不太一樣
這個在前面呢有介紹到了
那application layer呢
做完它該做的事情
它的資料的傳遞呢
要透過它下面的transport layer
來幫它完成
OK
那我們對於這個tcpudp
有一個簡單的一個說明
那這個到第三張會再講的該
再非常的完整
OK
那這也有一個張簡
就介紹了gttp,sntp
那以及講到domainment system
p2p2
然後對於bit torrent
這個寫定有一個簡單的一個介紹
然後討論到了cdm
然後以及最後的sacre programming
一個簡單的例子
來說明udp,tcp
那這個連線
這個資料的傳送
使用pile-on-code來實現
是怎麼樣子來完成的
今天飛同步課程
就上到這邊
各位同學拜拜
